{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSLice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filterdHeroesSelector","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","map","props","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","filtersAdapter","fiftersLoadingStatus","fetchFilters","filtersSLice","filtersChanged","filtersLoadingStatus","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesFilters","getState","btnClass","classNames","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PACaA,EAAU,WAmBnB,MAAO,CAACC,QAhBK,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAEeC,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAFzC,WAEFE,EAFE,QAIMC,GAJN,sBAKE,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SALxD,wBAQWH,EAASI,OARpB,eAQFC,EARE,yBAUDA,GAVC,uGAAH,wD,cCDXC,EAAgBC,cAEhBC,EAAeF,EAAcG,gBAAgB,CAC/CC,oBAAqB,SAGZC,EAAcC,YACvB,sBACA,WAEI,OAAOnB,EADWD,IAAXC,SACQ,mCAIjBoB,EAAcC,YAAY,CAC5BC,KAAM,SACNP,eACAQ,SAAU,CACNC,YAAa,SAACC,EAAOC,GACjBb,EAAcc,OAAOF,EAAOC,EAAOE,UAEvCC,YAAa,SAACJ,EAAOC,GACjBb,EAAciB,UAAUL,EAAOC,EAAOE,WAG9CG,cAAe,SAACC,GACZA,EACKC,QAAQf,EAAYgB,SAAS,SAAAT,GAAUA,EAAMR,oBAAsB,aACnEgB,QAAQf,EAAYiB,WAAW,SAACV,EAAOC,GACpCD,EAAMR,oBAAsB,OAC5BJ,EAAcuB,OAAOX,EAAOC,EAAOE,YAEtCK,QAAQf,EAAYmB,UAAW,SAAAZ,GAC5BA,EAAMR,oBAAsB,WAE/BqB,gBAAe,kBAIrBC,EAAoBnB,EAApBmB,QAEQC,EAFYpB,EAAXoB,QAITC,EAAa5B,EAAc6B,cAAa,SAAAjB,GAAK,OAAIA,EAAMkB,UAAvDF,UAEMG,EAAwBC,aACjC,SAACpB,GAAD,OAAWA,EAAMqB,QAAQC,eACzBN,GACA,SAACO,EAAQL,GACL,MAAe,QAAXK,EACOL,EAEAA,EAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYF,QAStDxB,GAEAe,EALAY,eAKAZ,EAJAa,cAIAb,EAHAc,oBAGAd,EAFAf,aACAK,EACAU,EADAV,Y,OCxBWyB,EAxCQ,SAAC,GAA4C,IAE5DC,EAFiBjC,EAA0C,EAA1CA,KAAMkC,EAAoC,EAApCA,YAAaN,EAAuB,EAAvBA,QAASO,EAAc,EAAdA,SAIjD,OAAQP,GACJ,IAAK,OACDK,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBACIG,UAAS,kDAA6CH,GAD1D,UAEI,qBAAKI,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAf,UAEI,oBAAIA,UAAU,aAAd,SAA4BpC,IAC5B,mBAAGoC,UAAU,YAAb,SAA0BF,OAE9B,sBAAMM,QAASL,EAAUC,UAAU,wFAAnC,SACI,wBAAQK,KAAK,SAASL,UAAU,sBAAsBM,aAAW,gBC1BlEC,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAlD,SACI,sBAAMR,UAAU,kBAAhB,2BC+CGS,EA3CI,WAEf,IAAMC,EAAiBC,YAAYzB,GAC5B3B,EAAsBoD,aAAY,SAAA5C,GAAK,OAAIA,EAAMkB,OAAO1B,uBACzDqD,EAAWC,cACVvE,EAAWD,IAAXC,QAEPwE,qBAAU,WACNF,EAASpD,OAEV,IAEH,IAAMuC,EAAWgB,uBAAY,SAACC,GAC1B1E,EAAQ,gCAAD,OAAiC0E,GAAM,UAC7CC,MAAK,SAAA/D,GAAI,OAAIgE,QAAQC,IAAIjE,EAAM,cAC/B+D,KAAKL,EAASzC,EAAY6C,KAC1BI,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAC3B,CAAC/E,IAEJ,GAA4B,YAAxBiB,EACA,OAAO,cAAC,EAAD,IACJ,GAA4B,UAAxBA,EACP,OAAO,oBAAIyC,UAAU,mBAAd,mGAGX,IAA0BsB,EAUpBC,EATiB,KADGD,EAUQZ,GATtBc,OACG,oBAAIxB,UAAU,mBAAd,8FAGJsB,EAAIG,KAAI,YAAqB,IAAnBT,EAAkB,EAAlBA,GAAOU,EAAW,sBAC/B,OAAO,cAAC,EAAD,2BAA6BA,GAA7B,IAAoC3B,SAAU,kBAAMA,EAASiB,MAAxCA,MAKpC,OACI,6BACKO,K,eCsDEI,EA9FO,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,OAGUF,mBAAS,IAHnB,mBAGjBG,EAHiB,KAGNC,EAHM,OAIcJ,mBAAS,IAJvB,mBAIjBK,EAJiB,KAIJC,EAJI,OAMevB,aAAY,SAAA5C,GAAK,OAAIA,EAAMqB,WAA3DA,EANiB,EAMjBA,QAAS+C,EANQ,EAMRA,oBACVvB,EAAWC,cACVvE,EAAWD,IAAXC,QAsCP,OACI,uBAAM0D,UAAU,+BAA+BoC,SArC3B,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAU,CACZvB,GAAIwB,cACJ5E,KAAMiE,EACN/B,YAAaiC,EACbvC,QAASyC,GAGb3F,EAAQ,+BAAgC,OAAQmG,KAAKC,UAAUH,IAC9DtB,MAAK,SAAA0B,GAAG,OAAIzB,QAAQC,IAAIwB,EAAK,kGAC7B1B,KAAKL,EAAS9C,EAAYyE,KAC1BnB,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAE1BS,EAAY,IACZE,EAAa,IACbE,EAAe,KAqBf,UACI,sBAAKlC,UAAU,OAAf,UACI,uBAAO4C,QAAQ,OAAO5C,UAAU,kBAAhC,oGACA,uBACI6C,UAAQ,EACRxC,KAAK,OACLzC,KAAK,OACLoC,UAAU,eACVgB,GAAG,OACH8B,YAAY,8EACZC,MAAOlB,EACPmB,SAAU,SAACX,GAAD,OAAOP,EAAYO,EAAEY,OAAOF,aAG9C,sBAAK/C,UAAU,OAAf,UACI,uBAAO4C,QAAQ,OAAO5C,UAAU,kBAAhC,8DACA,0BACI6C,UAAQ,EACRjF,KAAK,OACLoC,UAAU,eACVgB,GAAG,OACH8B,YAAY,sDACZ3C,MAAO,CAAC,OAAU,SAClB4C,MAAOhB,EACPiB,SAAU,SAACX,GAAD,OAAOL,EAAaK,EAAEY,OAAOF,aAI/C,sBAAK/C,UAAU,OAAf,UACI,uBAAO4C,QAAQ,UAAU5C,UAAU,aAAnC,kIACA,yBACI6C,UAAQ,EACR7C,UAAU,cACVgB,GAAG,UACHpD,KAAK,UACLmF,MAAOd,EACPe,SAAU,SAACX,GAAD,OAAOH,EAAeG,EAAEY,OAAOF,QAN7C,UAOI,2IAvDM,SAAC3D,EAASpC,GAC5B,MAAe,YAAXA,EACO,6IACW,UAAXA,EACA,2HAGPoC,GAAWA,EAAQoC,OAAS,EACrBpC,EAAQqC,KAAI,YAAoB,IAAlB7D,EAAiB,EAAjBA,KAAMsF,EAAW,EAAXA,MAEvB,GAAa,QAATtF,EAEJ,OAAO,wBAAmBmF,MAAOnF,EAA1B,SAAiCsF,GAApBtF,WAL5B,EAiDauF,CAAc/D,EAAS+C,SAIhC,wBAAQ9B,KAAK,SAASL,UAAU,kBAAhC,4D,iBC5FNoD,EAAiBhG,cAEjBC,EAAe+F,EAAe9F,gBAAgB,CAChD+F,qBAAsB,OACtBhE,aAAc,QAGLiE,EAAe7F,YACxB,wBACA,WAEI,OAAOnB,EADWD,IAAXC,SACQ,oCAIjBiH,EAAe5F,YAAY,CAC7BC,KAAM,UACNP,eACAQ,SAAU,CACN2F,eAAgB,SAACzF,EAAOC,GACpBD,EAAMsB,aAAerB,EAAOE,UAGpCG,cAAe,SAACC,GACZA,EACKC,QAAQ+E,EAAa9E,SAAS,SAAAT,GAC3BA,EAAM0F,qBAAuB,aAEhClF,QAAQ+E,EAAa7E,WAAW,SAACV,EAAOC,GACrCD,EAAM0F,qBAAuB,OAC7BL,EAAe1E,OAAOX,EAAOC,EAAOE,YAEvCK,QAAQ+E,EAAa3E,UAAU,SAAAZ,GAC5BA,EAAM0F,qBAAuB,WAEhC7E,gBAAe,kBAIrBC,EAAoB0E,EAApB1E,QAASC,EAAWyE,EAAXzE,QAEFC,EAAaqE,EAAepE,cAAa,SAAAjB,GAAK,OAAIA,EAAMqB,WAAxDL,UAECD,IAMX0E,GACA3E,EAJA6E,gBAIA7E,EAHA8E,eAGA9E,EAFA+E,qBAEA/E,EADA2E,gBChDEK,EAAmB,kBAAM,SAACC,GAAD,OAAU,SAAC9F,GACtC,OACW8F,EADW,kBAAX9F,EACK,CACRqC,KAAMrC,GAGFA,MAgBD+F,EAbDC,YAAe,CACzBlF,QAAS,CAACG,SAAQG,WAClB6E,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,IAClEO,UAAUC,IC4CCC,EApDO,WAAO,IAAD,EAEsB3D,aAAY,SAAA5C,GAAK,OAAIA,EAAMqB,WAAjEqE,EAFgB,EAEhBA,qBAAsBpE,EAFN,EAEMA,aACxBD,EAAUL,EAAUgF,EAAMQ,YAC1B3D,EAAWC,cAMjB,GAJAC,qBAAU,WACNF,EAAS0C,OACV,IAE0B,YAAzBG,EACA,OAAO,cAAC,EAAD,IACJ,GAA6B,UAAzBA,EACP,OAAO,oBAAIzD,UAAU,mBAAd,mGAGX,IAAuBsB,EAsBjBC,EArBiB,KADAD,EAsBQlC,GArBnBoC,OACG,oBAAIxB,UAAU,mBAAd,gHAIJsB,EAAIG,KAAI,YAA+B,IAA7B7D,EAA4B,EAA5BA,KAAMoC,EAAsB,EAAtBA,UAAWkD,EAAW,EAAXA,MAGxBsB,EAAWC,IAAW,MAAOzE,EAAW,CAC1C,OAAUpC,IAASyB,IAGvB,OAAO,wBAEK2B,GAAIpD,EACJoC,UAAWwE,EACXpE,QAAS,kBAAMQ,EAAS4C,EAAe5F,KAJ5C,SAKOsF,GAJGtF,MAUzB,OACI,qBAAKoC,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,+LACA,qBAAKA,UAAU,YAAf,SACKuB,UChCNmD,G,MAfH,WAER,OACI,sBAAM1E,UAAU,MAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,c,MCLpB2E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJe,SAASC,eAAe,W","file":"static/js/main.c0c4a4a5.chunk.js","sourcesContent":["\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk (\r\n    'heroes/fetchHeroes',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/heroes\");\r\n    }\r\n)\r\n\r\nconst heroesSLice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n            heroesAdapter.addOne(state, action.payload)\r\n        },\r\n        heroDeleted: (state, action) => {\r\n            heroesAdapter.removeOne(state, action.payload)\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload)\r\n            })\r\n            .addCase(fetchHeroes.rejected,  state => {\r\n                state.heroesLoadingStatus = 'error'\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = heroesSLice;\r\n\r\nexport default reducer;\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes)\r\n\r\nexport const filterdHeroesSelector = createSelector (\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter);\r\n        }\r\n    }\r\n)\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted\r\n} = actions;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {heroDeleted, fetchHeroes, filterdHeroesSelector} from './heroesSlice'\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesList = () => {\n    \n    const filteredHeroes = useSelector(filterdHeroesSelector);\n    const  heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then(data => console.log(data, 'Deleted'))\n        .then(dispatch(heroDeleted(id)))\n        .catch(err => console.log(err))\n    }, [request])\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n\n        return arr.map(({id, ...props}) => {\n            return <HeroesListItem key={id} {...props} onDelete={() => onDelete(id)}/>\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport {v4 as uuidv4} from \"uuid\"\nimport { heroCreated } from \"../heroesList/heroesSlice\";\n\nconst HeroesAddForm = () => {\n\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const {filters, filtersLoadingState} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n        .then(res => console.log(res, 'Отправка успешна'))\n        .then(dispatch(heroCreated(newHero)))\n        .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}\n                    />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option >Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingState)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\"\r\nimport { useHttp } from \"../../hooks/http.hook\"\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    fiftersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk (\r\n    'filters/fetchFilters',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/filters\");\r\n    }\r\n)\r\n\r\nconst filtersSLice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder \r\n            .addCase(fetchFilters.pending, state => {\r\n                state.filtersLoadingStatus = 'loading'\r\n            })\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload)\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {\r\n                state.filtersLoadingStatus = 'error'\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = filtersSLice;\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters)\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n}\n\nconst store = configureStore({\n    reducer: {heroes, filters},    \n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\n// const store = createStore(\n//                     combineReducers({heroes, filters}), \n//                     compose ( \n//                         applyMiddleware(ReduxThunk, stringMiddleware), \n//                         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n//                     );\n\nexport default store;\n\n","import classNames from \"classnames\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {filtersChanged, fetchFilters, selectAll} from './filtersSlice'\nimport store from '../../store/index'\nimport Spinner from \"../spinner/Spinner\";\n\n\nconst HeroesFilters = () => {\n\n    const { filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFilters())\n    }, [])\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        // Данные в json-файле я расширил классами и текстом\n        return arr.map(({name, className, label}) => {\n\n            // Используем библиотеку classnames и формируем классы динамически\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}